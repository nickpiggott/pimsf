#!/bin/bash

# Common path for all GPIO access
BASE_GPIO_PATH=/sys/class/gpio

# Assign names to GPIO pin numbers for each light
NET=5
TIME=6

# Assign names to states
ON="1"
OFF="0"

# Utility function to export a pin if not already exported
exportPin()
{
  if [ ! -e $BASE_GPIO_PATH/gpio$1 ]; then
    echo "$1" > $BASE_GPIO_PATH/export
  fi
}

# Utility function to set a pin as an output
setOutput()
{
  echo "out" > $BASE_GPIO_PATH/gpio$1/direction
}

# Utility function to change state of a light
setLightState()
{
  echo $2 > $BASE_GPIO_PATH/gpio$1/value
}

# Utility function to turn all lights off
allLightsOff()
{
  setLightState $NET $OFF
  setLightState $TIME $OFF
}

# Utility function to turn all lights on
allLightsOn()
{
  setLightState $NET $ON
  setLightState $TIME $ON
}

# Ctrl-C handler for clean shutdown
shutdown()
{
  allLightsOn
  exit 0
}

trap shutdown SIGINT

# Export pins so that we can use them
exportPin $NET
exportPin $TIME

# Set pins as outputs
setOutput $NET
setOutput $TIME

# Turn lights off to begin
allLightsOn

# Loop forever until user presses Ctrl-C
while [ 1 ]
do
    TIMESTATUS=$(/usr/bin/timedatectl show -p NTPSynchronized)
    if [ "$TIMESTATUS" = "NTPSynchronized=yes" ]
    then
        setLightState $TIME $OFF
    else
        setLightState $TIME $ON
    fi

    GATEWAY=$(/usr/sbin/ip route | /usr/bin/egrep -o "^default via [0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}")
    GATEWAY=${GATEWAY:12}
    PING=$(/usr/bin/ping -c 1 $GATEWAY)
    RESULT=$?
    if [ $RESULT -eq 0 ]
    then
        setLightState $NET $OFF
    else
        setLightState $NET $ON
    fi
sleep 5
done
